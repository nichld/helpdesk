<div class="flex flex-col gap-6">
  <h1 class="text-3xl font-bold text-gray-900">
    Customer Feedback Management
  </h1>
  
  <% if (typeof error !== 'undefined' && error) { %>
    <div class="bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded-md text-sm mb-6">
      <%= error %>
    </div>
  <% } %>
  
  <% if (typeof success !== 'undefined' && success) { %>
    <div class="bg-green-50 border border-green-200 text-green-600 px-4 py-3 rounded-md text-sm mb-6">
      <%= success %>
    </div>
  <% } %>
  
  <% if (typeof stats !== 'undefined' && stats) { %>
    <!-- Feedback Stats Cards -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
      <!-- Total Feedback -->
      <div class="bg-white border border-gray-200 rounded-lg p-6">
        <div class="flex items-center">
          <div class="flex-shrink-0 p-3 rounded-full bg-blue-100">
            <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z"></path>
            </svg>
          </div>
          <div class="ml-5">
            <h3 class="text-gray-500 text-sm font-medium">Total Feedback</h3>
            <p class="text-2xl font-bold text-gray-900"><%= stats.totalFeedback %></p>
          </div>
        </div>
      </div>
      
      <!-- Average Rating -->
      <div class="bg-white border border-gray-200 rounded-lg p-6">
        <div class="flex items-center">
          <div class="flex-shrink-0 p-3 rounded-full bg-yellow-100">
            <svg class="w-6 h-6 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"></path>
            </svg>
          </div>
          <div class="ml-5">
            <h3 class="text-gray-500 text-sm font-medium">Average Rating</h3>
            <div class="flex items-center">
              <p class="text-2xl font-bold text-gray-900"><%= stats.avgRating.toFixed(1) %></p>
              <div class="ml-2 text-yellow-500 flex">
                <% for(let i = 1; i <= 5; i++) { %>
                  <% if (i <= Math.round(stats.avgRating)) { %>
                    <span>★</span>
                  <% } else { %>
                    <span class="text-gray-300">★</span>
                  <% } %>
                <% } %>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Satisfaction Distribution -->
      <div class="bg-white border border-gray-200 rounded-lg p-6">
        <h3 class="text-gray-500 text-sm font-medium mb-2">Satisfaction Distribution</h3>
        <div class="space-y-2">
          <div class="flex items-center">
            <span class="w-24 text-sm">Very Satisfied</span>
            <div class="flex-1 h-2 mx-2 bg-gray-200 rounded-full overflow-hidden">
              <% const veryHappyPercent = stats.totalFeedback ? (stats.distribution['very-satisfied'] / stats.totalFeedback) * 100 : 0; %>
              <div class="h-full bg-green-500" style="width: <%= veryHappyPercent %>%"></div>
            </div>
            <span class="text-xs font-medium"><%= stats.distribution['very-satisfied'] || 0 %></span>
          </div>
          <div class="flex items-center">
            <span class="w-24 text-sm">Satisfied</span>
            <div class="flex-1 h-2 mx-2 bg-gray-200 rounded-full overflow-hidden">
              <% const happyPercent = stats.totalFeedback ? (stats.distribution['satisfied'] / stats.totalFeedback) * 100 : 0; %>
              <div class="h-full bg-green-300" style="width: <%= happyPercent %>%"></div>
            </div>
            <span class="text-xs font-medium"><%= stats.distribution['satisfied'] || 0 %></span>
          </div>
          <div class="flex items-center">
            <span class="w-24 text-sm">Neutral</span>
            <div class="flex-1 h-2 mx-2 bg-gray-200 rounded-full overflow-hidden">
              <% const neutralPercent = stats.totalFeedback ? (stats.distribution['neutral'] / stats.totalFeedback) * 100 : 0; %>
              <div class="h-full bg-yellow-300" style="width: <%= neutralPercent %>%"></div>
            </div>
            <span class="text-xs font-medium"><%= stats.distribution['neutral'] || 0 %></span>
          </div>
          <div class="flex items-center">
            <span class="w-24 text-sm">Dissatisfied</span>
            <div class="flex-1 h-2 mx-2 bg-gray-200 rounded-full overflow-hidden">
              <% const unhappyPercent = stats.totalFeedback ? (stats.distribution['dissatisfied'] / stats.totalFeedback) * 100 : 0; %>
              <div class="h-full bg-orange-400" style="width: <%= unhappyPercent %>%"></div>
            </div>
            <span class="text-xs font-medium"><%= stats.distribution['dissatisfied'] || 0 %></span>
          </div>
          <div class="flex items-center">
            <span class="w-24 text-sm">Very Dissatisfied</span>
            <div class="flex-1 h-2 mx-2 bg-gray-200 rounded-full overflow-hidden">
              <% const veryUnhappyPercent = stats.totalFeedback ? (stats.distribution['very-dissatisfied'] / stats.totalFeedback) * 100 : 0; %>
              <div class="h-full bg-red-500" style="width: <%= veryUnhappyPercent %>%"></div>
            </div>
            <span class="text-xs font-medium"><%= stats.distribution['very-dissatisfied'] || 0 %></span>
          </div>
        </div>
      </div>
    </div>
  <% } %>

  <!-- Filter and Search Form - Server-side Filtering -->
  <div class="bg-white border border-gray-200 rounded-lg p-4 mb-4">
    <form action="<%= isAdmin ? '/admin/feedback' : '/feedback' %>" method="GET" class="grid grid-cols-1 md:grid-cols-3 gap-4" id="filter-form">
      <!-- Search input -->
      <div class="col-span-1">
        <label for="search" class="block text-sm font-medium text-gray-700 mb-1">Search</label>
        <input 
          type="text" 
          id="search" 
          name="search"
          value="<%= typeof filters !== 'undefined' && filters.search ? filters.search : '' %>"
          placeholder="Search in comments or ticket title" 
          class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
        >
      </div>
      
      <!-- Rating filter -->
      <%- include('../../partials/_dropdown', {
        id: 'rating',
        name: 'rating',
        label: 'Filter by rating',
        options: [
          { value: '', text: 'All ratings' },
          { value: '5', text: '5 stars' },
          { value: '4', text: '4 stars' },
          { value: '3', text: '3 stars' },
          { value: '2', text: '2 stars' },
          { value: '1', text: '1 star' }
        ],
        selectedValue: typeof filters !== 'undefined' ? filters.rating : ''
      }) %>
      
      <!-- Satisfaction filter -->
      <%- include('../../partials/_dropdown', {
        id: 'satisfactionLevel',
        name: 'satisfactionLevel',
        label: 'Filter by satisfaction',
        options: [
          { value: '', text: 'All levels' },
          { value: 'very-satisfied', text: 'Very Satisfied' },
          { value: 'satisfied', text: 'Satisfied' },
          { value: 'neutral', text: 'Neutral' },
          { value: 'dissatisfied', text: 'Dissatisfied' },
          { value: 'very-dissatisfied', text: 'Very Dissatisfied' }
        ],
        selectedValue: typeof filters !== 'undefined' ? filters.satisfactionLevel : ''
      }) %>
    </form>
  </div>

  <!-- Feedback table -->
  <div class="bg-white border border-gray-200 rounded-lg overflow-hidden">
    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ticket</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Customer</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Rating</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Satisfaction</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Submitted</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
          </tr>
        </thead>
        <tbody class="divide-y divide-gray-200">
          <% if (feedback && feedback.length > 0) { %>
            <% feedback.forEach(item => { %>
              <tr class="hover:bg-gray-50">
                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                  <%= item.ticketSnapshot.title %>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  <%= item.ticketSnapshot.customer ? `${item.ticketSnapshot.customer.firstName} ${item.ticketSnapshot.customer.lastName}` : 'N/A' %>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm">
                  <div class="flex text-yellow-500">
                    <% for(let i = 1; i <= 5; i++) { %>
                      <span><%= i <= item.rating ? '★' : '☆' %></span>
                    <% } %>
                  </div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm">
                  <% const satisfactionEmoji = {
                    'very-satisfied': '😃',
                    'satisfied': '🙂',
                    'neutral': '😐',
                    'dissatisfied': '😕',
                    'very-dissatisfied': '😡'
                  }; %>
                  <span class="inline-flex items-center">
                    <%= satisfactionEmoji[item.satisfactionLevel] %>
                    <span class="ml-1">
                      <%= item.satisfactionLevel.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ') %>
                    </span>
                  </span>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  <%= new Date(item.submittedAt).toLocaleDateString() %>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                  <div class="flex items-center space-x-2">
                    <a 
                      href="<%= isAdmin ? '/admin/feedback/' : '/feedback/' %><%= item._id %>" 
                      class="inline-flex items-center px-3 py-1 border border-blue-300 rounded-md text-sm font-medium bg-blue-50 text-blue-700 hover:bg-blue-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors"
                    >
                      View Details
                    </a>
                    
                    <% if (isAdmin) { %>
                      <form action="/admin/feedback/delete" method="POST" class="inline-block">
                        <input type="hidden" name="feedbackId" value="<%= item._id %>">
                        <button 
                          type="submit" 
                          class="inline-flex items-center px-3 py-1 border border-red-300 rounded-md text-sm font-medium bg-red-50 text-red-700 hover:bg-red-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors"
                          onclick="return confirm('Are you sure you want to delete this feedback?')"
                        >
                          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                          </svg>
                          Delete
                        </button>
                      </form>
                    <% } %>
                  </div>
                </td>
              </tr>
            <% }); %>
          <% } else { %>
            <tr>
              <td colspan="6" class="px-6 py-4 text-center text-sm text-gray-500">
                No feedback found that matches your filters.
              </td>
            </tr>
          <% } %>
        </tbody>
      </table>
    </div>
    
    <% if (pagination && pagination.pages > 1) { %>
      <div class="px-6 py-4 border-t border-gray-200">
        <div class="flex items-center justify-between">
          <div class="text-sm text-gray-500">
            Showing <span class="font-medium"><%= ((pagination.page - 1) * pagination.limit) + 1 %></span> to <span class="font-medium"><%= Math.min(pagination.page * pagination.limit, pagination.total) %></span> of <span class="font-medium"><%= pagination.total %></span> results
          </div>
          <div class="flex space-x-2">
            <% if (pagination.page > 1) { %>
              <a href="?page=<%= pagination.page - 1 %>&rating=<%= filters.rating || '' %>&satisfactionLevel=<%= filters.satisfactionLevel || '' %>&search=<%= filters.search || '' %>" class="px-3 py-1 border border-gray-300 rounded-md text-sm text-gray-700 hover:bg-gray-50">
                Previous
              </a>
            <% } %>
            
            <% if (pagination.page < pagination.pages) { %>
              <a href="?page=<%= pagination.page + 1 %>&rating=<%= filters.rating || '' %>&satisfactionLevel=<%= filters.satisfactionLevel || '' %>&search=<%= filters.search || '' %>" class="px-3 py-1 border border-gray-300 rounded-md text-sm text-gray-700 hover:bg-gray-50">
                Next
              </a>
            <% } %>
          </div>
        </div>
      </div>
    <% } %>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Auto-submit form when filters change
    const filterForm = document.getElementById('filter-form');
    const ratingFilter = document.getElementById('rating');
    const satisfactionFilter = document.getElementById('satisfactionLevel');
    const searchInput = document.getElementById('search');
    
    // Handle dropdown change events
    ratingFilter.addEventListener('change', function() {
      filterForm.submit();
    });
    
    satisfactionFilter.addEventListener('change', function() {
      filterForm.submit();
    });
    
    // Handle enter key in search input
    searchInput.addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        e.preventDefault(); // Prevent default form submission
        filterForm.submit();
      }
    });
  });
</script>
