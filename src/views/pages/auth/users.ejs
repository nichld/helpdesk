<div class="flex flex-col gap-6">
  <h1 class="text-3xl font-bold text-gray-900">
    User Management
  </h1>
  
  <% if (typeof error !== 'undefined' && error) { %>
    <div class="bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded-md text-sm mb-6">
      <%= error %>
    </div>
  <% } %>
  
  <% if (typeof success !== 'undefined' && success) { %>
    <div class="bg-green-50 border border-green-200 text-green-600 px-4 py-3 rounded-md text-sm mb-6">
      <%= success %>
    </div>
  <% } %>

  <div id="toast-notification" class="hidden fixed top-4 right-4 z-50"></div>

  <!-- Filter and Search Form - Server-side Filtering with improved layout -->
  <div class="bg-white border border-gray-200 rounded-lg p-4 mb-4">
    <form action="/users" method="GET" id="filter-form">
      <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
        <!-- Search input -->
        <div>
          <label for="search" class="block text-sm font-medium text-gray-700 mb-1">Search</label>
          <div class="flex">
            <input 
              type="text" 
              id="search" 
              name="search"
              value="<%= typeof filters !== 'undefined' && filters.search ? filters.search : '' %>"
              placeholder="Search by name or email" 
              class="flex-grow px-3 py-2 border border-gray-300 rounded-l-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            >
            <button 
              type="submit"
              class="bg-blue-600 text-white px-4 py-2 border border-blue-600 rounded-r-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
            >
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
              </svg>
            </button>
          </div>
        </div>
        
        <!-- Role filter using partial with autoSubmit -->
        <%- include('../../partials/_dropdown', {
          id: 'role',
          name: 'role',
          label: 'Filter by role',
          options: [
            { value: 'all', text: 'All roles' },
            { value: 'admin', text: 'Admin' },
            { value: 'employee', text: 'Employee' },
            { value: 'it-employee', text: 'IT Employee' },
            { value: 'support-employee', text: 'Support Employee' },
            { value: 'customer', text: 'Customer' }
          ],
          selectedValue: typeof filters !== 'undefined' ? filters.role : 'all',
          autoSubmit: true
        }) %>
        
        <!-- Status filter using partial with autoSubmit -->
        <%- include('../../partials/_dropdown', {
          id: 'status',
          name: 'status',
          label: 'Filter by status',
          options: [
            { value: 'all', text: 'All statuses' },
            { value: 'approved', text: 'Approved' },
            { value: 'pending', text: 'Pending' }
          ],
          selectedValue: typeof filters !== 'undefined' ? filters.status : 'all',
          autoSubmit: true
        }) %>
      </div>
    </form>
  </div>

  <div class="bg-white border border-gray-200 rounded-lg overflow-hidden">
    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Role</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Member Since</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          <% users.forEach(user => { %>
            <tr data-user-id="<%= user._id %>" data-user-name="<%= user.firstName %> <%= user.lastName %>" data-user-email="<%= user.email %>" data-user-role="<%= user.role %>" data-user-status="<%= user.approved ? 'approved' : 'pending' %>">
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="flex items-center">
                  <div class="flex-shrink-0 h-10 w-10 rounded-full bg-gray-100 flex items-center justify-center overflow-hidden">
                    <% if (user.profileImage) { %>
                      <img src="<%= user.profileImage %>" alt="<%= user.firstName %>" class="w-full h-full object-cover">
                    <% } else { %>
                      <span class="font-medium text-gray-700"><%= user.firstName.charAt(0).toUpperCase() %></span>
                    <% } %>
                  </div>
                  <div class="ml-4">
                    <div class="text-sm font-medium text-gray-900"><%= user.firstName %> <%= user.lastName %></div>
                  </div>
                </div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                <%= user.email %>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <%- include('../../partials/_badge', {
                  text: user.role === 'admin' ? 'Admin' :
                        user.role === 'employee' ? 'Employee' :
                        user.role === 'it-employee' ? 'IT Employee' :
                        user.role === 'support-employee' ? 'Support Employee' : 'Customer',
                  type: user.role
                }) %>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <% if (user.role === 'customer') { %>
                  <% if (user.approved) { %>
                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                      Approved
                    </span>
                  <% } else { %>
                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-yellow-100 text-yellow-800">
                      Pending
                    </span>
                  <% } %>
                <% } else { %>
                  <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800">
                    N/A
                  </span>
                <% } %>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                <%= new Date(user.createdAt).toLocaleDateString() %>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                <div class="flex items-center gap-2 justify-end">
                  <% if (user._id.toString() === locals.user.id) { %>
                    <!-- Current user badge with info icon -->
                    <span class="inline-flex items-center px-3 py-1 rounded bg-gray-100 text-gray-700 border border-gray-200">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1 text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                      </svg>
                      Cannot change own account
                    </span>
                  <% } else { %>
                    <!-- Role selection form -->
                    <form action="/users/update-role" method="POST" class="inline">
                      <input type="hidden" name="userId" value="<%= user._id %>">
                      <div class="relative">
                        <select 
                          name="role"
                          class="role-select appearance-none bg-white border border-gray-300 hover:border-gray-400 px-3 py-1 pr-8 rounded-md text-sm font-medium text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors" 
                          data-is-admin="<%= user.role === 'admin' ? 'true' : 'false' %>"
                          onchange="confirmRoleChange(this)"
                          style="background-image: none;" <!-- Explicitly remove browser default arrow -->
                        >
                          <option value="customer" <%= user.role === 'customer' ? 'selected' : '' %>>Customer</option>
                          <option value="employee" <%= user.role === 'employee' ? 'selected' : '' %>>Employee</option>
                          <option value="it-employee" <%= user.role === 'it-employee' ? 'selected' : '' %>>IT Employee</option>
                          <option value="support-employee" <%= user.role === 'support-employee' ? 'selected' : '' %>>Support Employee</option>
                          <option value="admin" <%= user.role === 'admin' ? 'selected' : '' %>>Admin</option>
                        </select>
                        <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
                          <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                          </svg>
                        </div>
                      </div>
                    </form>
                    
                    <% if (user.role === 'customer') { %>
                      <!-- Approval toggle button -->
                      <form action="/users/update-approval" method="POST" class="inline">
                        <input type="hidden" name="userId" value="<%= user._id %>">
                        <button 
                          type="submit" 
                          class="approval-toggle inline-flex items-center px-3 py-1 border rounded-md text-sm font-medium <%= user.approved ? 'border-red-300 bg-red-50 text-red-700 hover:bg-red-100' : 'border-green-300 bg-green-50 text-green-700 hover:bg-green-100' %> focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors" 
                        >
                          <% if (user.approved) { %>
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636" />
                            </svg>
                            Revoke
                          <% } else { %>
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                            </svg>
                            Approve
                          <% } %>
                        </button>
                      </form>
                    <% } %>
                    
                    <!-- Delete user button -->
                    <button 
                      type="button" 
                      class="delete-user-btn inline-flex items-center px-3 py-1 border border-red-300 rounded-md text-sm font-medium bg-red-50 text-red-700 hover:bg-red-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors" 
                      data-user-id="<%= user._id %>"
                      data-user-name="<%= user.firstName %> <%= user.lastName %>"
                      data-is-admin="<%= user.role === 'admin' ? 'true' : 'false' %>"
                      onclick="openDeleteModal('<%= user._id %>', '<%= user.firstName %> <%= user.lastName %>', <%= user.role === 'admin' %>)"
                    >
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                      </svg>
                      Delete
                    </button>
                  <% } %>
                </div>
              </td>
            </tr>
          <% }) %>
          
          <% if (users.length === 0) { %>
            <tr>
              <td colspan="6" class="px-6 py-4 text-center text-sm text-gray-500">No users found</td>
            </tr>
          <% } %>
        </tbody>
      </table>
    </div>
  </div>
</div>

<!-- Delete Confirmation Modal -->
<div id="delete-modal" class="fixed inset-0 flex items-center justify-center z-50 hidden">
  <div class="absolute inset-0 bg-black opacity-50"></div>
  <div class="relative bg-white rounded-lg shadow-lg p-6 w-full max-w-md mx-auto">
    <div class="flex flex-col gap-4">
      <div class="flex items-center justify-between">
        <h3 class="text-lg font-medium text-gray-900">Confirm Delete</h3>
        <button type="button" class="close-modal text-gray-400 hover:text-gray-500">
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      
      <div class="bg-red-50 border-l-4 border-red-400 p-4">
        <div class="flex items-start">
          <svg class="h-6 w-6 text-red-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
          </svg>
          <div class="ml-3">
            <h3 class="text-sm font-medium text-red-800">Warning</h3>
            <div class="mt-1 text-sm text-red-700">
              <p>Are you sure you want to delete <strong id="delete-user-name"></strong>?</p>
              <p class="mt-1" id="delete-warning-text">This action cannot be undone.</p>
            </div>
          </div>
        </div>
      </div>
      
      <form action="/users/delete" method="POST" class="mt-5">
        <input type="hidden" name="userId" id="delete-user-id">
        <div class="flex justify-end gap-3">
          <button type="button" class="close-modal px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
            Cancel
          </button>
          <button type="submit" class="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
            Delete User
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Close modal buttons
    const closeModalButtons = document.querySelectorAll('.close-modal');
    const deleteModal = document.getElementById('delete-modal');
    
    closeModalButtons.forEach(button => {
      button.addEventListener('click', function() {
        deleteModal.classList.add('hidden');
      });
    });
    
    // Close modal when clicking outside
    deleteModal.addEventListener('click', function(e) {
      if (e.target === deleteModal) {
        deleteModal.classList.add('hidden');
      }
    });

    // Only need to handle search input's Enter key press
    const filterForm = document.getElementById('filter-form');
    const searchInput = document.getElementById('search');
    
    // Handle enter key in search input
    searchInput.addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        e.preventDefault(); // Prevent default form submission
        filterForm.submit();
      }
    });
  });
  
  // Function to handle role change confirmation
  function confirmRoleChange(selectElement) {
    const isAdmin = selectElement.getAttribute('data-is-admin') === 'true';
    const newRole = selectElement.value;
    
    if (isAdmin && newRole !== 'admin') {
      if (!confirm('Warning: You are about to change an admin user\'s role. This may affect system security. Continue?')) {
        // Reset to previous value
        selectElement.value = 'admin';
        return;
      }
    }
    
    // Submit the form
    selectElement.parentElement.parentElement.submit();
  }
  
  // Function to open delete modal
  function openDeleteModal(userId, userName, isAdmin) {
    const deleteModal = document.getElementById('delete-modal');
    const deleteUserNameElement = document.getElementById('delete-user-name');
    const deleteUserIdInput = document.getElementById('delete-user-id');
    const warningElement = document.getElementById('delete-warning-text');
    
    deleteUserNameElement.textContent = userName;
    deleteUserIdInput.value = userId;
    
    if (warningElement) {
      if (isAdmin) {
        warningElement.innerHTML = '<strong class="text-red-700">Warning: You are deleting an admin user. This may affect system security.</strong>';
      } else {
        warningElement.innerHTML = 'This action cannot be undone.';
      }
    }
    
    deleteModal.classList.remove('hidden');
  }
</script>