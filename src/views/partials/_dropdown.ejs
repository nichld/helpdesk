<%
/**
 * Reusable dropdown component
 * @param {string} id - The ID for the dropdown
 * @param {string} name - The name attribute
 * @param {string} label - The label text (optional)
 * @param {Array} options - Array of objects with value and text properties
 * @param {string} selectedValue - The currently selected value
 * @param {string} onChange - Optional JavaScript function to call on change
 * @param {string} wrapperClasses - Additional classes for the wrapper div
 * @param {string} labelClasses - Additional classes for the label
 * @param {string} selectClasses - Additional classes for the select element
 * @param {boolean} required - Whether the field is required
 * @param {boolean} autoSubmit - Whether to auto-submit the parent form on change
 */

// Set default values
id = typeof id !== 'undefined' ? id : '';
name = typeof name !== 'undefined' ? name : id;
label = typeof label !== 'undefined' ? label : '';
options = typeof options !== 'undefined' ? options : [];
selectedValue = typeof selectedValue !== 'undefined' ? selectedValue : '';
onChange = typeof onChange !== 'undefined' ? onChange : '';
wrapperClasses = typeof wrapperClasses !== 'undefined' ? wrapperClasses : 'col-span-1';
labelClasses = typeof labelClasses !== 'undefined' ? labelClasses : 'block text-sm font-medium text-gray-700 mb-1';
selectClasses = typeof selectClasses !== 'undefined' ? selectClasses : 'appearance-none mt-1 w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500';
required = typeof required !== 'undefined' ? required : false;
autoSubmit = typeof autoSubmit !== 'undefined' ? autoSubmit : false;

// Ensure autoSubmit always adds the direct onchange attribute, not relying on class-based event delegation
const onChangeAttr = onChange ? `onchange="${onChange}(this)"` : (autoSubmit ? 'onchange="this.form.submit()"' : '');
%>

<div class="<%= wrapperClasses %>">
  <% if (label) { %>
    <label for="<%= id %>" class="<%= labelClasses %>"><%= label %></label>
  <% } %>
  <div class="relative">
    <select 
      id="<%= id %>"
      name="<%= name %>"
      class="<%= selectClasses %>"
      <%= onChangeAttr %>
      <%= required ? 'required' : '' %>
    >
      <% options.forEach(function(option) { %>
        <option 
          value="<%= option.value %>" 
          <%= selectedValue === option.value ? 'selected' : '' %>
          <%= option.disabled ? 'disabled' : '' %>
        >
          <%= option.text %>
        </option>
      <% }); %>
    </select>
    <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
      <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
      </svg>
    </div>
  </div>
</div>
